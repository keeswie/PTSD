{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\PTSD\\\\front-end\\\\src\\\\component\\\\properties\\\\PropertyList.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./PropertyList.module.css\";\nimport PropertyItem from \"./products/PropertyItem\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PropertyList(props) {\n  _s();\n\n  const [productBarcode, setProduct] = useState('');\n  const [location, setLocation] = useState('');\n\n  function submitHandler() {}\n\n  console.log(props.products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"product barcode\",\n      onChange: event => {\n        setProduct(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.products.product.filter(product => {\n        if (productBarcode === \"\") {\n          return product;\n        } else if (product.barcode.includes(productBarcode)) {\n          return product;\n        }\n      }).map(product => /*#__PURE__*/_jsxDEV(PropertyItem, {\n        barcode: product.barcode,\n        title: product.name,\n        price: product.price,\n        image: product.image,\n        locationBarcode: product.locationBarcode,\n        productNumber: product.productNumber\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PropertyList, \"qsHUpzy5JRgkl6zkXvCHLSXT55E=\");\n\n_c = PropertyList;\nexport default PropertyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"sources":["C:/Users/Gebruiker/Documents/GitHub/PTSD/front-end/src/component/properties/PropertyList.js"],"names":["classes","PropertyItem","useState","PropertyList","props","productBarcode","setProduct","location","setLocation","submitHandler","console","log","products","event","target","value","list","product","filter","barcode","includes","map","name","price","image","locationBarcode","productNumber","id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,cAAD,EAAiBC,UAAjB,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AACA,WAASO,aAAT,GAAwB,CAEvB;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,QAAlB;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAG,iBAAjC;AAAmD,MAAA,QAAQ,EAAEC,KAAK,IAAI;AAACP,QAAAA,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AAA+B;AAAtG;AAAA;AAAA;AAAA;AAAA,YADF,eAEA;AAAI,MAAA,SAAS,EAAEf,OAAO,CAACgB,IAAvB;AAAA,gBAEEZ,KAAK,CAACQ,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA+BD,OAAD,IAAW;AACvC,YAAGZ,cAAc,KAAK,EAAtB,EAAyB;AACvB,iBAAOY,OAAP;AACD,SAFD,MAEM,IAAGA,OAAO,CAACE,OAAR,CAAgBC,QAAhB,CAAyBf,cAAzB,CAAH,EAA4C;AAChD,iBAAOY,OAAP;AACD;AACF,OAND,EAMGI,GANH,CAMQJ,OAAD,iBACL,QAAC,YAAD;AAEE,QAAA,OAAO,EAAEA,OAAO,CAACE,OAFnB;AAGE,QAAA,KAAK,EAAEF,OAAO,CAACK,IAHjB;AAIE,QAAA,KAAK,EAAEL,OAAO,CAACM,KAJjB;AAKE,QAAA,KAAK,EAAEN,OAAO,CAACO,KALjB;AAME,QAAA,eAAe,EAAEP,OAAO,CAACQ,eAN3B;AAOE,QAAA,aAAa,EAAER,OAAO,CAACS;AAPzB,SACOT,OAAO,CAACU,EADf;AAAA;AAAA;AAAA;AAAA,cAPF;AAFF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAhCQxB,Y;;KAAAA,Y;AAkCT,eAAeA,YAAf","sourcesContent":["import classes from \"./PropertyList.module.css\";\r\nimport PropertyItem from \"./products/PropertyItem\";\r\nimport {useState} from 'react'\r\nfunction PropertyList(props) {\r\n  const [productBarcode, setProduct] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  function submitHandler(){\r\n    \r\n  }\r\n  console.log(props.products)\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder = \"product barcode\" onChange={event => {setProduct(event.target.value)}}/>\r\n    <ul className={classes.list}>\r\n      {\r\n      props.products.product.filter((product)=>{\r\n        if(productBarcode === \"\"){\r\n          return product\r\n        }else if(product.barcode.includes(productBarcode)){\r\n          return product\r\n        }\r\n      }).map((product) => (\r\n        <PropertyItem\r\n          key={product.id}\r\n          barcode={product.barcode}\r\n          title={product.name}\r\n          price={product.price}\r\n          image={product.image}\r\n          locationBarcode={product.locationBarcode}\r\n          productNumber={product.productNumber}\r\n        />\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PropertyList;\r\n"]},"metadata":{},"sourceType":"module"}