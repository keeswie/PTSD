{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\PTSD\\\\front-end\\\\src\\\\pages\\\\SupplyOrderPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport classes from \"../component/properties/products/PropertyItem.module.css\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SupplyOrderPage() {\n  _s();\n\n  var rowData = [{\n    make: \"Toyota\",\n    model: \"Celica\",\n    price: 35000\n  }, {\n    make: \"Ford\",\n    model: \"Mondeo\",\n    price: 32000\n  }, {\n    make: \"Porsche\",\n    model: \"Boxter\",\n    price: 72000\n  }];\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedProp, setLoadedProp] = useState([]); // all locations\n\n  function generatorHandler() {}\n\n  function makeTable(locations) {\n    var data = [];\n    var i = 0;\n    locations.Location.forEach(location => {\n      if (location.productBarcode.length > 3) {\n        fetch(\"http://localhost:3000/products/\" + location.productBarcode).then(response => {\n          //console.log(response.data.product[0])\n          console.log(response.json()); //data[i] = {make:response.data.product[0].barcode, model: response.data.product[0].name, price: response.data.product[0].price }\n\n          i++;\n          return data;\n        });\n      }\n    });\n    console.log(data); // var rowData = [\n    //     {make: \"Toyota\", model: \"Celica\", price: 35000},\n    //     {make: \"Ford\", model: \"Mondeo\", price: 32000},\n    //     {make: \"Porsche\", model: \"Boxter\", price: 72000}\n    // ];\n    // rowData[3] = {make:\"toyota\", model: \"supra\", price: 2313}\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(\"http://localhost:3000/locations/\").then(response => {\n      setLoadedProp(response.data); //makeTable(response.data)\n\n      return response.data.product;\n    }).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatorHandler,\n      children: \"Generate supply order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: 400,\n        width: 600\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: makeTable(loadedProp),\n        children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n          field: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SupplyOrderPage, \"TSUInslvviAvah6ufWU3Qte4new=\");\n\n_c = SupplyOrderPage;\nexport default SupplyOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplyOrderPage\");","map":{"version":3,"sources":["C:/Users/Gebruiker/Documents/GitHub/PTSD/front-end/src/pages/SupplyOrderPage.js"],"names":["axios","useState","useEffect","classes","AgGridColumn","AgGridReact","SupplyOrderPage","rowData","make","model","price","isLoading","setIsLoading","loadedProp","setLoadedProp","generatorHandler","makeTable","locations","data","i","Location","forEach","location","productBarcode","length","fetch","then","response","console","log","json","get","product","height","width"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\nimport classes from \"../component/properties/products/PropertyItem.module.css\"\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\n\r\n\r\n\r\nfunction SupplyOrderPage() {\r\n\r\n    var rowData = [\r\n        {make: \"Toyota\", model: \"Celica\", price: 35000},\r\n        {make: \"Ford\", model: \"Mondeo\", price: 32000},\r\n        {make: \"Porsche\", model: \"Boxter\", price: 72000}\r\n    ];\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [loadedProp, setLoadedProp] = useState([]); // all locations\r\n    function generatorHandler(){\r\n\r\n    }\r\n\r\n\r\n    function makeTable(locations){\r\n        var data =[];\r\n        var i = 0;\r\n        locations.Location.forEach(location => {\r\n           if(location.productBarcode.length>3){\r\n            fetch(\"http://localhost:3000/products/\"+ location.productBarcode)\r\n            .then((response) => {\r\n             //console.log(response.data.product[0])\r\n             console.log(response.json())\r\n             //data[i] = {make:response.data.product[0].barcode, model: response.data.product[0].name, price: response.data.product[0].price }\r\n             i++;\r\n             \r\n             return data;\r\n            });               \r\n           } \r\n        });\r\n        console.log(data)\r\n        // var rowData = [\r\n        //     {make: \"Toyota\", model: \"Celica\", price: 35000},\r\n        //     {make: \"Ford\", model: \"Mondeo\", price: 32000},\r\n        //     {make: \"Porsche\", model: \"Boxter\", price: 72000}\r\n        // ];\r\n        // rowData[3] = {make:\"toyota\", model: \"supra\", price: 2313}\r\n        \r\n       \r\n    }\r\n\r\n\r\n    useEffect(() => {       \r\n        setIsLoading(true);\r\n        axios.get(\"http://localhost:3000/locations/\")\r\n        .then((response) => {\r\n          setLoadedProp(response.data)\r\n          //makeTable(response.data)\r\n          return response.data.product\r\n        })\r\n        .then(() => {\r\n          setIsLoading(false)\r\n        });\r\n    \r\n      }, []);\r\n\r\n      if(isLoading){\r\n        return (\r\n          <section>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </section>\r\n        );\r\n      }\r\n      return (\r\n        <section>\r\n            <button onClick={generatorHandler}>Generate supply order</button>\r\n          <div className=\"ag-theme-alpine\" style={{height: 400, width: 600}}>\r\n           <AgGridReact\r\n               rowData={makeTable(loadedProp)}>\r\n               <AgGridColumn field=\"make\"></AgGridColumn>\r\n               <AgGridColumn field=\"model\"></AgGridColumn>\r\n               <AgGridColumn field=\"price\"></AgGridColumn>\r\n           </AgGridReact>\r\n       </div>\r\n        </section>\r\n      );\r\n\r\n}\r\n\r\nexport default SupplyOrderPage;\r\n"]},"metadata":{},"sourceType":"module"}