{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\PTSD\\\\front-end\\\\src\\\\component\\\\properties\\\\locations\\\\LocationList.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./PropertyList.module.css\";\nimport LocationItem from \"./LocationItem\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LocationList(props) {\n  _s();\n\n  const [productBarcode, setProduct] = useState('');\n  const [location, setLocation] = useState('');\n  console.log(props.products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"location barcode\",\n      onChange: event => {\n        setProduct(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.locations.product.filter(product => {\n        if (productBarcode === \"\") {\n          return product;\n        } else if (product.barcode.includes(productBarcode)) {\n          return product;\n        }\n      }).map(location => /*#__PURE__*/_jsxDEV(LocationItem, {\n        barcode: location.barcode,\n        productNumber: location.productNumber,\n        productBarcode: location.Barcode\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationList, \"qsHUpzy5JRgkl6zkXvCHLSXT55E=\");\n\n_c = LocationList;\nexport default LocationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationList\");","map":{"version":3,"sources":["C:/Users/Gebruiker/Documents/GitHub/PTSD/front-end/src/component/properties/locations/LocationList.js"],"names":["classes","LocationItem","useState","LocationList","props","productBarcode","setProduct","location","setLocation","console","log","products","event","target","value","list","locations","product","filter","barcode","includes","map","productNumber","Barcode","id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,cAAD,EAAiBC,UAAjB,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAlB;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAG,kBAAjC;AAAoD,MAAA,QAAQ,EAAEC,KAAK,IAAI;AAACN,QAAAA,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AAA+B;AAAvG;AAAA;AAAA;AAAA;AAAA,YADF,eAEA;AAAI,MAAA,SAAS,EAAEd,OAAO,CAACe,IAAvB;AAAA,gBAEEX,KAAK,CAACY,SAAN,CAAgBC,OAAhB,CAAwBC,MAAxB,CAAgCD,OAAD,IAAW;AACxC,YAAGZ,cAAc,KAAK,EAAtB,EAAyB;AACvB,iBAAOY,OAAP;AACD,SAFD,MAEM,IAAGA,OAAO,CAACE,OAAR,CAAgBC,QAAhB,CAAyBf,cAAzB,CAAH,EAA4C;AAChD,iBAAOY,OAAP;AACD;AACF,OAND,EAMGI,GANH,CAMQd,QAAD,iBACL,QAAC,YAAD;AAEE,QAAA,OAAO,EAAEA,QAAQ,CAACY,OAFpB;AAGE,QAAA,aAAa,EAAEZ,QAAQ,CAACe,aAH1B;AAIE,QAAA,cAAc,EAAEf,QAAQ,CAACgB;AAJ3B,SACOhB,QAAQ,CAACiB,EADhB;AAAA;AAAA;AAAA;AAAA,cAPF;AAFF;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA3BQrB,Y;;KAAAA,Y;AA6BT,eAAeA,YAAf","sourcesContent":["import classes from \"./PropertyList.module.css\";\r\nimport LocationItem from \"./LocationItem\"\r\nimport {useState} from 'react'\r\nfunction LocationList(props) {\r\n  const [productBarcode, setProduct] = useState('')\r\n  const [location, setLocation] = useState('')\r\n\r\n  console.log(props.products)\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder = \"location barcode\" onChange={event => {setProduct(event.target.value)}}/>\r\n    <ul className={classes.list}>\r\n      {\r\n      props.locations.product.filter((product)=>{\r\n        if(productBarcode === \"\"){\r\n          return product\r\n        }else if(product.barcode.includes(productBarcode)){\r\n          return product\r\n        }\r\n      }).map((location) => (\r\n        <LocationItem\r\n          key={location.id}\r\n          barcode={location.barcode}\r\n          productNumber={location.productNumber}\r\n          productBarcode={location.Barcode}\r\n        />\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationList;\r\n"]},"metadata":{},"sourceType":"module"}