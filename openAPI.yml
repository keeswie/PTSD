openapi: '3.0.2'
info:
  title: Products API
  version: '1.0'
  description: |
    API that allows the user to interact with the products, locations and employees tracked by this Web Application
components:
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic
  schemas:
    Employee:
      type: object
      required:
        - "id"
        - "name"
        - "adress"
      properties:
        id:
          type: string
          readOnly: true
        name: 
          type: string
        adress:
          type: string
        email:
          type: string
        password:
          type: string
    Product:
      type: object
      required:
        - "barcode"
        - "date"
      properties:
        barcode:
          type: string
        name: 
          type: string
        location:
          type: string
        date:
          type: string
          format: date
          example: "2019-07-26T22:18:23.018+00:00"
    Location:
      type: object
      required:
        - "barcode"
      properties:
        barcode:
          type: string
        barcodeProduct:
          type: string
        numberProdcut:
          type: integer
  responses:
    errorMessage:
      description: "Request body is was not well formed."
      content:
        application/json:
          schema:
            type: object
            properties:
              error-message:
                type: string
                description: More details in message
        text/csv:
          schema:
            type: string
            description: More details in message
    ServerError:
      description: Server error; no results, try again later

    NotFound:
      description: Resource not found
paths: 
  /employee:
    post:
      security:
        - basicAuth: []
      tags: 
        - Employee
      description: "Creates an Employee with the given information from the body"
      summary: Creates an Employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: returned the created Employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '5XX':
          $ref: '#/components/responses/ServerError' 
    get:
      security:
        - basicAuth: []
      tags:
        - Employee
      description: "Retrieves a list all Employees"
      summary: List of Employees

      responses: 
        '200':
          description: List made and returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '5XX':
          $ref: '#/components/responses/ServerError' 
  /employee/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: "The id of the Employee"
        schema:
          type: string
    get:
      security:
        - basicAuth: []
      tags:
        - Employee
      summary: Get wanted Employee
      description: "Get Employee with the same id"
      responses:
        '200':
          description: Employee found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'

    put:
      security:
        - basicAuth: []
      tags:
        - Employee
      description: "Updates an Employee with the given id"
      summary: Updates an Employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
    
      responses:
        '200':
          description: "Employee found, changed and returned"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'

    delete:
      security:
        - basicAuth: []
      tags:
        - Employee
      description: "Deletes an Employee with the given id and return the Employee"
      summary: Deletes an Employee

      responses:
        '204':
          description: Employee found, deleted and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
  /product:
    post:
      security:
        - basicAuth: []
      tags:
        - Product
      description: "creates a product with given information in the body and returns the created product"
      summary: "creates a product"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Employee created and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
  /product/{barcode}:
    parameters:
      - name: barcode
        in: path
        required: true
        description: The barcode of the product
        schema:
          type: string
    get:
      security:
        - basicAuth: []
      tags:
        - Product
      description: "Gets the product with the given barcode"
      summary: Gets a product
      responses:
        '200':
          description: Employee found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
  /product/{barcode}/at/{location}:
    parameters:
      - name: barcode
        in: path
        required: true
        description: The barcode of the product
        schema:
          type: string
      - name: location
        in: path
        required: true
        description: the location of the product
        schema:
          type: string
    put:
      security:
        - basicAuth: []
      tags:
        - Product
      description: Updates the product with the given barcode and information
      summary: Updates a product
      responses:
        '200':
          description: Employee found, updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - basicAuth: []
      tags: 
        - Product
      description: deletes a product with the given barcode from the given location
      summary: deletes a product
      responses:
        '200':
          description: Employee found, deleted and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
  /location:
    post:
      security:
        - basicAuth: []
      tags:
        - Location
      description: "Creates a location with given information in the body and returns the created product"
      summary: "Creates a location"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Location created and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
  /location/at/{barcode}:
    parameters:
      - name: barcode
        in: path
        required: true
        description: the barcode of the location
        schema:
          type: string
    delete:
      security:
        - basicAuth: []
      tags:
        - Location
      description: "Deletes a location with given barcode"
      summary: "Deletes a location"
      responses:
        '200':
          description: Location found, deleted and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
    get:
      security:
        - basicAuth: []
      tags:
        - Location
      description: "Gets a location with given barcode"
      summary: "Gets a location"
      responses:
        '200':
          description: Location found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'

  /location/{barcode}:
    parameters:
      - name: barcode
        in: path
        required: true
        description: The barcode of the location
        schema:
          type: string
      - name: barcodeProduct
        in: query
        required: false
        description: the barcode of the stored product
        schema:
          type: string
      - name: number
        in: query
        required: false
        description: the number of that product added to the location
        schema:
          type: integer
    put:
      security:
        - basicAuth: []
      tags:
        - Location
      description: "Updates a location with given information in the query and returns the created product"
      summary: "Updates a location"
      responses:
        '200':
          description: Location found, updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/errorMessage'
        
        '404': 
          $ref: '#/components/responses/NotFound'
        
        '5XX':
          $ref: '#/components/responses/ServerError'
      
